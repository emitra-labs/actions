name: Build Docker image

on:
  workflow_call:
    inputs:
      cache-path:
        required: true
        type: string
      cache-map:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      environment:
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-image:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: emitra-labs/actions
          ref: main
          path: actions

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: ${{ inputs.cache-path }}
          key: cache-${{ hashFiles(inputs.dockerfile) }}

      - name: Inject cache into Docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: ${{ inputs.cache-map }}
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Move .dockerignore into project root directory
        run: mv actions/.dockerignore .

      - name: Write .netrc file
        run: echo "${{ secrets.NETRC }}" > /home/runner/.netrc

      - name: Write ~/.npmrc file
        run: echo "${{ secrets.NPMRC }}" >> /home/runner/.npmrc

      - name: Write .env file
        run: |
          cat <<EOT >> ${{ github.workspace }}/.env
          ${{ vars.ENV }}
          EOT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secret-files: |
            netrc=/home/runner/.netrc
            npmrc=/home/runner/.npmrc
